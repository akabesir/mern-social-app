{
    "sourceFile": "server/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1691780045573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691780073035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n app.use(morgan(\"common\"))\r\n app.use(bodyParser.json({limit: \"30mb\", extended: true}))\r\n app.use(bodyParser.urlencoded({limit:\"30mb\", extended: true}))\r\n app.use(cors())\r\n-app.use(\"/assets\", express.static(path.join(__dirname, 'public/assets')))\r\n+app.use(\"/assets\", express.static(path.join(__dirName, 'public/assets')))\r\n \r\n \r\n const storage = multer.diskStorage({\r\n     destination: function (req,file,cb){\r\n"
                },
                {
                    "date": 1691780093935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n app.use(morgan(\"common\"))\r\n app.use(bodyParser.json({limit: \"30mb\", extended: true}))\r\n app.use(bodyParser.urlencoded({limit:\"30mb\", extended: true}))\r\n app.use(cors())\r\n-app.use(\"/assets\", express.static(path.join(__dirName, 'public/assets')))\r\n+app.use(\"/assets\", express.static(path.join(_dirName, 'public/assets')))\r\n \r\n \r\n const storage = multer.diskStorage({\r\n     destination: function (req,file,cb){\r\n"
                },
                {
                    "date": 1691780299621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n const PORT = process.env.PORT || 6001\r\n mongoose.connect(process.env.MONGO_URL, {\r\n     useNewUrlParser: true,\r\n-    useUnifiedToplogy: true,\r\n+    useUnifiedTopology: true,\r\n }).then(()=>{\r\n     app.listen(PORT, () => console.log(`Server Port: ${PORT}`))\r\n \r\n     User.insertMany(users);\r\n"
                },
                {
                    "date": 1691780844617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n import { verifyToken } from \"./middleware/auth.js\";\r\n import {createPost} from './controllers/posts.js'\r\n import User from './modells/User.js'\r\n import Post from './modells/Post.js'\r\n-import { users,posts } from \"./data/index.js\";\r\n \r\n \r\n const _fileName = fileURLToPath(import.meta.url)\r\n const _dirName = path.dirname(_fileName)\r\n"
                },
                {
                    "date": 1691780890598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n import { verifyToken } from \"./middleware/auth.js\";\r\n import {createPost} from './controllers/posts.js'\r\n import User from './modells/User.js'\r\n import Post from './modells/Post.js'\r\n+import { users,posts } from \"./data/index.js\";\r\n \r\n \r\n const _fileName = fileURLToPath(import.meta.url)\r\n const _dirName = path.dirname(_fileName)\r\n"
                },
                {
                    "date": 1691781266054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,62 +1,69 @@\n import express from \"express\";\r\n import bodyParser from \"body-parser\";\r\n import mongoose from \"mongoose\";\r\n import cors from \"cors\";\r\n-import dotenv from 'dotenv'\r\n+import dotenv from \"dotenv\";\r\n import multer from \"multer\";\r\n-import helmet from 'helmet'\r\n+import helmet from \"helmet\";\r\n import morgan from \"morgan\";\r\n-import path from 'path'\r\n+import path from \"path\";\r\n import { fileURLToPath } from \"url\";\r\n-import {register} from './controllers/auth.js'\r\n-import authRoutes from './routes/auth.js'\r\n-import userRoutes from \"./routes/users.js\"\r\n-import postRoutes from './routes/posts.js'\r\n+import authRoutes from \"./routes/auth.js\";\r\n+import userRoutes from \"./routes/users.js\";\r\n+import postRoutes from \"./routes/posts.js\";\r\n+import { register } from \"./controllers/auth.js\";\r\n+import { createPost } from \"./controllers/posts.js\";\r\n import { verifyToken } from \"./middleware/auth.js\";\r\n-import {createPost} from './controllers/posts.js'\r\n-import User from './modells/User.js'\r\n-import Post from './modells/Post.js'\r\n-import { users,posts } from \"./data/index.js\";\r\n+import User from \"./models/User.js\";\r\n+import Post from \"./models/Post.js\";\r\n+import { users, posts } from \"./data/index.js\";\r\n \r\n+/* CONFIGURATIONS */\r\n+const __filename = fileURLToPath(import.meta.url);\r\n+const __dirname = path.dirname(__filename);\r\n+dotenv.config();\r\n+const app = express();\r\n+app.use(express.json());\r\n+app.use(helmet());\r\n+app.use(helmet.crossOriginResourcePolicy({ policy: \"cross-origin\" }));\r\n+app.use(morgan(\"common\"));\r\n+app.use(bodyParser.json({ limit: \"30mb\", extended: true }));\r\n+app.use(bodyParser.urlencoded({ limit: \"30mb\", extended: true }));\r\n+app.use(cors());\r\n+app.use(\"/assets\", express.static(path.join(__dirname, \"public/assets\")));\r\n \r\n-const _fileName = fileURLToPath(import.meta.url)\r\n-const _dirName = path.dirname(_fileName)\r\n-dotenv.config()\r\n-const app = express()\r\n-app.use(express.json())\r\n-app.use(helmet())\r\n-app.use(helmet.crossOriginResourcePolicy({policy: \"cross-origin\"}))\r\n-app.use(morgan(\"common\"))\r\n-app.use(bodyParser.json({limit: \"30mb\", extended: true}))\r\n-app.use(bodyParser.urlencoded({limit:\"30mb\", extended: true}))\r\n-app.use(cors())\r\n-app.use(\"/assets\", express.static(path.join(_dirName, 'public/assets')))\r\n-\r\n-\r\n+/* FILE STORAGE */\r\n const storage = multer.diskStorage({\r\n-    destination: function (req,file,cb){\r\n\\ No newline at end of file\n-        cb(null, \"public/assets\")\r\n-    },\r\n-    filename: function(req, file, cb){\r\n-        cb(null, file.originalname)\r\n-    }\r\n-})\r\n-const upload = multer({storage})\r\n+  destination: function (req, file, cb) {\r\n+    cb(null, \"public/assets\");\r\n+  },\r\n+  filename: function (req, file, cb) {\r\n+    cb(null, file.originalname);\r\n+  },\r\n+});\r\n+const upload = multer({ storage });\r\n \r\n-app.post(\"/auth/register\", upload.single(\"picture\"), register)\r\n-app.post(\"/posts\", verifyToken,upload.single(\"picture\"), createPost)\r\n+/* ROUTES WITH FILES */\r\n+app.post(\"/auth/register\", upload.single(\"picture\"), register);\r\n+app.post(\"/posts\", verifyToken, upload.single(\"picture\"), createPost);\r\n \r\n-app.use(\"/auth\", authRoutes)\r\n-app.use(\"/users\", userRoutes)\r\n-app.use(\"/posts\", postRoutes)\r\n+/* ROUTES */\r\n+app.use(\"/auth\", authRoutes);\r\n+app.use(\"/users\", userRoutes);\r\n+app.use(\"/posts\", postRoutes);\r\n \r\n-const PORT = process.env.PORT || 6001\r\n-mongoose.connect(process.env.MONGO_URL, {\r\n+/* MONGOOSE SETUP */\r\n+const PORT = process.env.PORT || 6001;\r\n+mongoose\r\n+  .connect(process.env.MONGO_URL, {\r\n     useNewUrlParser: true,\r\n     useUnifiedTopology: true,\r\n-}).then(()=>{\r\n-    app.listen(PORT, () => console.log(`Server Port: ${PORT}`))\r\n+  })\r\n+  .then(() => {\r\n+    app.listen(PORT, () => console.log(`Server Port: ${PORT}`));\r\n \r\n-    User.insertMany(users);\r\n-    Post.insertMany(posts)\r\n-}).catch((error) => console.log(`${error} didn't connect `))\n+    /* ADD DATA ONE TIME */\r\n+    // User.insertMany(users);\r\n+    // Post.insertMany(posts);\r\n+  })\r\n+  .catch((error) => console.log(`${error} did not connect`));\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691781345058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import postRoutes from \"./routes/posts.js\";\r\n import { register } from \"./controllers/auth.js\";\r\n import { createPost } from \"./controllers/posts.js\";\r\n import { verifyToken } from \"./middleware/auth.js\";\r\n-import User from \"./models/User.js\";\r\n+import User from \"./modells/User.js\";\r\n import Post from \"./models/Post.js\";\r\n import { users, posts } from \"./data/index.js\";\r\n \r\n /* CONFIGURATIONS */\r\n"
                },
                {
                    "date": 1691781350502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,69 +1,62 @@\n import express from \"express\";\r\n import bodyParser from \"body-parser\";\r\n import mongoose from \"mongoose\";\r\n import cors from \"cors\";\r\n-import dotenv from \"dotenv\";\r\n+import dotenv from 'dotenv'\r\n import multer from \"multer\";\r\n-import helmet from \"helmet\";\r\n+import helmet from 'helmet'\r\n import morgan from \"morgan\";\r\n-import path from \"path\";\r\n+import path from 'path'\r\n import { fileURLToPath } from \"url\";\r\n-import authRoutes from \"./routes/auth.js\";\r\n-import userRoutes from \"./routes/users.js\";\r\n-import postRoutes from \"./routes/posts.js\";\r\n-import { register } from \"./controllers/auth.js\";\r\n-import { createPost } from \"./controllers/posts.js\";\r\n+import {register} from './controllers/auth.js'\r\n+import authRoutes from './routes/auth.js'\r\n+import userRoutes from \"./routes/users.js\"\r\n+import postRoutes from './routes/posts.js'\r\n import { verifyToken } from \"./middleware/auth.js\";\r\n-import User from \"./modells/User.js\";\r\n-import Post from \"./models/Post.js\";\r\n-import { users, posts } from \"./data/index.js\";\r\n+import {createPost} from './controllers/posts.js'\r\n+import User from './modells/User.js'\r\n+import Post from './modells/Post.js'\r\n+import { users,posts } from \"./data/index.js\";\r\n \r\n-/* CONFIGURATIONS */\r\n-const __filename = fileURLToPath(import.meta.url);\r\n-const __dirname = path.dirname(__filename);\r\n-dotenv.config();\r\n-const app = express();\r\n-app.use(express.json());\r\n-app.use(helmet());\r\n-app.use(helmet.crossOriginResourcePolicy({ policy: \"cross-origin\" }));\r\n-app.use(morgan(\"common\"));\r\n-app.use(bodyParser.json({ limit: \"30mb\", extended: true }));\r\n-app.use(bodyParser.urlencoded({ limit: \"30mb\", extended: true }));\r\n-app.use(cors());\r\n-app.use(\"/assets\", express.static(path.join(__dirname, \"public/assets\")));\r\n \r\n-/* FILE STORAGE */\r\n+const _fileName = fileURLToPath(import.meta.url)\r\n+const _dirName = path.dirname(_fileName)\r\n+dotenv.config()\r\n+const app = express()\r\n+app.use(express.json())\r\n+app.use(helmet())\r\n+app.use(helmet.crossOriginResourcePolicy({policy: \"cross-origin\"}))\r\n+app.use(morgan(\"common\"))\r\n+app.use(bodyParser.json({limit: \"30mb\", extended: true}))\r\n+app.use(bodyParser.urlencoded({limit:\"30mb\", extended: true}))\r\n+app.use(cors())\r\n+app.use(\"/assets\", express.static(path.join(_dirName, 'public/assets')))\r\n+\r\n+\r\n const storage = multer.diskStorage({\r\n-  destination: function (req, file, cb) {\r\n-    cb(null, \"public/assets\");\r\n-  },\r\n-  filename: function (req, file, cb) {\r\n-    cb(null, file.originalname);\r\n-  },\r\n-});\r\n-const upload = multer({ storage });\r\n\\ No newline at end of file\n+    destination: function (req,file,cb){\r\n+        cb(null, \"public/assets\")\r\n+    },\r\n+    filename: function(req, file, cb){\r\n+        cb(null, file.originalname)\r\n+    }\r\n+})\r\n+const upload = multer({storage})\r\n \r\n-/* ROUTES WITH FILES */\r\n-app.post(\"/auth/register\", upload.single(\"picture\"), register);\r\n-app.post(\"/posts\", verifyToken, upload.single(\"picture\"), createPost);\r\n+app.post(\"/auth/register\", upload.single(\"picture\"), register)\r\n+app.post(\"/posts\", verifyToken,upload.single(\"picture\"), createPost)\r\n \r\n-/* ROUTES */\r\n-app.use(\"/auth\", authRoutes);\r\n-app.use(\"/users\", userRoutes);\r\n-app.use(\"/posts\", postRoutes);\r\n+app.use(\"/auth\", authRoutes)\r\n+app.use(\"/users\", userRoutes)\r\n+app.use(\"/posts\", postRoutes)\r\n \r\n-/* MONGOOSE SETUP */\r\n-const PORT = process.env.PORT || 6001;\r\n-mongoose\r\n-  .connect(process.env.MONGO_URL, {\r\n+const PORT = process.env.PORT || 6001\r\n+mongoose.connect(process.env.MONGO_URL, {\r\n     useNewUrlParser: true,\r\n     useUnifiedTopology: true,\r\n-  })\r\n-  .then(() => {\r\n-    app.listen(PORT, () => console.log(`Server Port: ${PORT}`));\r\n+}).then(()=>{\r\n+    app.listen(PORT, () => console.log(`Server Port: ${PORT}`))\r\n \r\n-    /* ADD DATA ONE TIME */\r\n-    // User.insertMany(users);\r\n-    // Post.insertMany(posts);\r\n-  })\r\n-  .catch((error) => console.log(`${error} did not connect`));\n+    User.insertMany(users);\r\n+    Post.insertMany(posts)\r\n+}).catch((error) => console.log(`${error} didn't connect `))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691783097039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,7 +56,7 @@\n     useUnifiedTopology: true,\r\n }).then(()=>{\r\n     app.listen(PORT, () => console.log(`Server Port: ${PORT}`))\r\n \r\n-    User.insertMany(users);\r\n-    Post.insertMany(posts)\r\n+    // User.insertMany(users);\r\n+    // Post.insertMany(posts)\r\n }).catch((error) => console.log(`${error} didn't connect `))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692043591801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,7 +56,7 @@\n     useUnifiedTopology: true,\r\n }).then(()=>{\r\n     app.listen(PORT, () => console.log(`Server Port: ${PORT}`))\r\n \r\n-    // User.insertMany(users);\r\n-    // Post.insertMany(posts)\r\n+    User.insertMany(users);\r\n+    Post.insertMany(posts)\r\n }).catch((error) => console.log(`${error} didn't connect `))\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692043634271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,7 +56,7 @@\n     useUnifiedTopology: true,\r\n }).then(()=>{\r\n     app.listen(PORT, () => console.log(`Server Port: ${PORT}`))\r\n \r\n-    User.insertMany(users);\r\n-    Post.insertMany(posts)\r\n+    // User.insertMany(users);\r\n+    // Post.insertMany(posts)\r\n }).catch((error) => console.log(`${error} didn't connect `))\n\\ No newline at end of file\n"
                }
            ],
            "date": 1691780045573,
            "name": "Commit-0",
            "content": "import express from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nimport mongoose from \"mongoose\";\r\nimport cors from \"cors\";\r\nimport dotenv from 'dotenv'\r\nimport multer from \"multer\";\r\nimport helmet from 'helmet'\r\nimport morgan from \"morgan\";\r\nimport path from 'path'\r\nimport { fileURLToPath } from \"url\";\r\nimport {register} from './controllers/auth.js'\r\nimport authRoutes from './routes/auth.js'\r\nimport userRoutes from \"./routes/users.js\"\r\nimport postRoutes from './routes/posts.js'\r\nimport { verifyToken } from \"./middleware/auth.js\";\r\nimport {createPost} from './controllers/posts.js'\r\nimport User from './modells/User.js'\r\nimport Post from './modells/Post.js'\r\nimport { users,posts } from \"./data/index.js\";\r\n\r\n\r\nconst _fileName = fileURLToPath(import.meta.url)\r\nconst _dirName = path.dirname(_fileName)\r\ndotenv.config()\r\nconst app = express()\r\napp.use(express.json())\r\napp.use(helmet())\r\napp.use(helmet.crossOriginResourcePolicy({policy: \"cross-origin\"}))\r\napp.use(morgan(\"common\"))\r\napp.use(bodyParser.json({limit: \"30mb\", extended: true}))\r\napp.use(bodyParser.urlencoded({limit:\"30mb\", extended: true}))\r\napp.use(cors())\r\napp.use(\"/assets\", express.static(path.join(__dirname, 'public/assets')))\r\n\r\n\r\nconst storage = multer.diskStorage({\r\n    destination: function (req,file,cb){\r\n        cb(null, \"public/assets\")\r\n    },\r\n    filename: function(req, file, cb){\r\n        cb(null, file.originalname)\r\n    }\r\n})\r\nconst upload = multer({storage})\r\n\r\napp.post(\"/auth/register\", upload.single(\"picture\"), register)\r\napp.post(\"/posts\", verifyToken,upload.single(\"picture\"), createPost)\r\n\r\napp.use(\"/auth\", authRoutes)\r\napp.use(\"/users\", userRoutes)\r\napp.use(\"/posts\", postRoutes)\r\n\r\nconst PORT = process.env.PORT || 6001\r\nmongoose.connect(process.env.MONGO_URL, {\r\n    useNewUrlParser: true,\r\n    useUnifiedToplogy: true,\r\n}).then(()=>{\r\n    app.listen(PORT, () => console.log(`Server Port: ${PORT}`))\r\n\r\n    User.insertMany(users);\r\n    Post.insertMany(posts)\r\n}).catch((error) => console.log(`${error} didn't connect `))"
        }
    ]
}